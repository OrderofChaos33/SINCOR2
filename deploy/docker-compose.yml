version: '3.8'

services:
  sincor-app:
    build: .
    container_name: sincor-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
    env_file:
      - ./config/.env
    volumes:
      - ./logs:/app/logs
      - ./outputs:/app/outputs
      - sincor-data:/app/data
    depends_on:
      - redis
    networks:
      - sincor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: sincor-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf
      - ./deploy/ssl:/etc/nginx/ssl
      - sincor-static:/var/www/static
    depends_on:
      - sincor-app
    networks:
      - sincor-network

  redis:
    image: redis:7-alpine
    container_name: sincor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sincor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: For background task processing
  sincor-worker:
    build: .
    container_name: sincor-worker
    restart: unless-stopped
    command: python -m agents.taskpool.taskpool_dispatcher
    env_file:
      - ./config/.env
    volumes:
      - ./logs:/app/logs
      - ./outputs:/app/outputs
      - sincor-data:/app/data
    depends_on:
      - redis
    networks:
      - sincor-network

volumes:
  sincor-data:
  redis-data:
  sincor-static:

networks:
  sincor-network:
    driver: bridge